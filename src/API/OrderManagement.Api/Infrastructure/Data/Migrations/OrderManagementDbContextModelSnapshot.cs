// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OrderManagement.Api.Infrastructure.Data;

#nullable disable

namespace OrderManagement.Api.Infrastructure.Data.Migrations
{
    [DbContext(typeof(OrderManagementDbContext))]
    partial class OrderManagementDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("OrderManagement.Api.Domain.Entities.Order", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("TotalAmount")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            Id = new Guid("e838ccdc-9c85-43e9-a3a3-cb52bed4d1b0"),
                            CreatedAt = new DateTime(2025, 6, 1, 12, 49, 59, 210, DateTimeKind.Utc).AddTicks(2452),
                            CustomerId = new Guid("cc4881a1-8a08-4eb1-8985-be25842484ee"),
                            TotalAmount = 5000m
                        },
                        new
                        {
                            Id = new Guid("1d472ecb-09df-45dd-9c2f-fd552263dfa1"),
                            CreatedAt = new DateTime(2025, 6, 1, 12, 49, 59, 210, DateTimeKind.Utc).AddTicks(2461),
                            CustomerId = new Guid("ee8aa160-18e4-4128-bf3b-f2c3008c008c"),
                            TotalAmount = 10000m
                        });
                });

            modelBuilder.Entity("OrderManagement.Api.Domain.Entities.OrderStatus", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("OrderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("State")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("OrderId")
                        .IsUnique();

                    b.ToTable("OrderStatuses");
                });

            modelBuilder.Entity("OrderManagement.Api.Domain.Entities.Promotion", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CustomerSegment")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ValidFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ValidTo")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Value")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("CustomerSegment");

                    b.HasIndex("ValidFrom");

                    b.ToTable("Promotions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("7b7bf5b9-3d8b-447f-855c-176fdf9c64fc"),
                            CustomerSegment = "New",
                            Name = "Vuka",
                            Type = "Percentage",
                            ValidFrom = new DateTime(2025, 6, 1, 12, 49, 59, 210, DateTimeKind.Utc).AddTicks(157),
                            Value = 10m
                        });
                });

            modelBuilder.Entity("OrderManagement.Api.Domain.Entities.OrderStatus", b =>
                {
                    b.HasOne("OrderManagement.Api.Domain.Entities.Order", "Order")
                        .WithOne("OrderStatus")
                        .HasForeignKey("OrderManagement.Api.Domain.Entities.OrderStatus", "OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");
                });

            modelBuilder.Entity("OrderManagement.Api.Domain.Entities.Order", b =>
                {
                    b.Navigation("OrderStatus")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
